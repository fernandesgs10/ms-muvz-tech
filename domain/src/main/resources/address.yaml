openapi: 3.0.0
info:
  version: 1.0.0
  title: Swagger MUVZ - Address
  description: A sample API as an example to address features in the OpenAPI 3.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://muvz.tech

paths:
  /address/listAddress:
    get:
      tags:
        - listAddress
      summary: Returns all address from the system that the user has access to
      description: Returns all address from the system that the user has access to
      operationId: listAddress
      parameters:
        - in: query
          name: pageNo
          schema:
            type: integer
            default: 0
          required: false
          description: The number of items to skip before starting to collect the result set.
        - in: query
          name: pageSize
          schema:
            type: integer
            default: 20
          required: false
          description: The number of items to return.
        - in: query
          name: sortBy
          schema:
            type: array
            items:
              type: string

      responses:
        '200':
          description: address response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/page"
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: "#/components/schemas/pageAddress"

        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generalError'


  /address/nmAddressZipCode/{nmAddressZipCode}:
    get:
      tags:
        - listAddressByNmAddressZipCode
      summary: Returns a address based on a single nmAddressZipCode
      description: Returns a address based on a nmAddressZipCode
      operationId: listAddressByNmAddressZipCode
      parameters:
        - name: nmAddressZipCode
          in: path
          description: nmAddressZipCode address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/address'

        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'

        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generalError'

  /address/createAddress:
    post:
      tags:
        - createAddress
      summary: Add a new address
      operationId: createAddress
      requestBody:
        description: Optional description in new address
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/address'
      responses:
        '201':
          description: Created
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generalError'


components:
  schemas:
    pageAddress:
      allOf:
        - $ref: '#/components/schemas/address'
        - type: object

    address:
      type: object
      required:
        - nmAddress
        - nmAddressZipCode
        - nmAddressNumber
        - nmAddressCityCode
      properties:
        coSeqAddress:
          type: number
        nmAddress:
          type: string
          minItems: 1
        nmAddressZipCode:
          type: string
        nmAddressNumber:
          type: string
        nmAddressCityCode:
          type: string

    genericMessage:
      type: object
      properties:
        message:
          type: string

    notFound:
      type: object
      properties:
        schema:
          $ref: "#/components/schemas/genericMessage"

    generalError:
      type: object
      properties:
        schema:
          $ref: "#/components/schemas/genericMessage"

    sort:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: number

    pageable:
      type: object
      properties:
        pageNumber:
          type: number
        pageSize:
          type: number
        offset:
          type: number
        paged:
          type: boolean
        unpaged:
          type: boolean
        sort:
          $ref: '#/components/schemas/sort'

    page:
      type: object
      properties:
        totalElements:
          type: number
        totalPages:
          type: number
        last:
          type: boolean
        size:
          type: number
        number:
          type: number
        first:
          type: boolean
        numberOfElements:
          type: number
        empty:
          type: boolean
        content:
          type: array
          items:
            type: object
        pageable:
          $ref: '#/components/schemas/pageable'
        sort:
          $ref: '#/components/schemas/sort'